dtm <- TermDocumentMatrix(jeopCorpus)
Encoding(rstats)  <- "UTF-8"
rstats$clean_tweet = gsub("&amp", "", rstats$text)
rstats$clean_tweet = gsub("(RT|via)((?:\\b\\W*@\\w+)+)", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("@\\w+", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("[[:punct:]]", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("[[:digit:]]", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("http\\w+", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("[ \t]{2,}", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("^\\s+|\\s+$", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("délégués", "", rstats$clean_tweet)
View(rstats)
rstats <-readRDS("rstatssrf1301.RDS")
rstats$clean_tweet = gsub("&amp", "", rstats$text)
rstats$clean_tweet = gsub("(RT|via)((?:\\b\\W*@\\w+)+)", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("@\\w+", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("[[:punct:]]", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("[[:digit:]]", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("http\\w+", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("[ \t]{2,}", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("^\\s+|\\s+$", "", rstats$clean_tweet)
rstats$clean_tweet<- iconv(rstats$clean_tweet, "ASCII", "UTF-8", sub="")
jeopCorpus <- Corpus(VectorSource(rstats$clean_tweet)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, stopwords('german')) %>%
tm_map(stemDocument)
View(rstats)
View(rstats)
install.packages("textcat")
install.packages("stringr")
rstats$lang <- textcat(rstats$clean_tweet)
library("textcat")
library("stringr")
rstats$lang <- textcat(rstats$clean_tweet)
View(rstats)
head(rstats$lang)
rstats$lang
rstats<-rstats %>% filter(lang=="german")
str(rstats$lang)
rstats<-rstats %>% filter(lang="german")
rstats<-rstats %>% filter(lang=="german")
rstats$lang[1]
rstats<-rstats %>%bind_cols(unlist(rstats$lang))
library(tidyverse)
rstats<-rstats %>%bind_cols(unlist(rstats$lang))
rstats<-rstats %>%bind_cols(rstats$lang)
bind_cols(rstats,rstats$lang)
unlist(rstats$lang)
rstats$lang <- unlist(rstats$lang)
rstats$filter(lang=="german")
rstats %>% filter(lang=="german")
rstats <- rstats %>% filter(lang=="german")
rstats$clean_tweet<- iconv(rstats$clean_tweet, "ASCII", "UTF-8", sub="")
jeopCorpus <- Corpus(VectorSource(rstats$clean_tweet)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, stopwords('german')) %>%
tm_map(stemDocument)
library(wordcloud2)
library(tm)
library(wordcloud)
library(SnowballC)
jeopCorpus <- Corpus(VectorSource(rstats$clean_tweet)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, stopwords('german')) %>%
tm_map(stemDocument)
library(pacman)
p_load(tidyverse,igraph,ggraph,rtweet,hrbrthemes)
rstats <-readRDS("rstatssrf1301.RDS")
library(wordcloud2)
library(tm)
library(wordcloud)
library(SnowballC)
library("textcat")
library("stringr")
library(tidyverse)
rstats$clean_tweet = gsub("&amp", "", rstats$text)
rstats$clean_tweet = gsub("(RT|via)((?:\\b\\W*@\\w+)+)", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("@\\w+", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("[[:punct:]]", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("[[:digit:]]", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("http\\w+", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("[ \t]{2,}", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("^\\s+|\\s+$", "", rstats$clean_tweet)
#welche sprache?
rstats$lang <- unlist(textcat(rstats$clean_tweet))
rstats <- rstats %>% filter(lang=="german")
jeopCorpus <- Corpus(VectorSource(rstats$clean_tweet)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, stopwords('german')) %>%
tm_map(stemDocument)
rstats$clean_tweet<- iconv(rstats$clean_tweet, "ASCII", "UTF-8", sub="")
View(rstats)
jeopCorpus[["content"]]
rstats <-readRDS("rstatssrf1301.RDS")
rstats$clean_tweet = gsub("@\\w+", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("[[:punct:]]", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("[[:digit:]]", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("(RT|via)((?:\\b\\W*@\\w+)+)", "", rstats$clean_tweet)
#welche sprache?
rstats$lang <- unlist(textcat(rstats$clean_tweet))
rstats <- rstats %>% filter(lang=="german")
jeopCorpus <- Corpus(VectorSource(rstats$clean_tweet))
dtm <- TermDocumentMatrix(jeopCorpus)
jeopCorpus <- Corpus(VectorSource(rstats$clean_tweet)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, stopwords('german')) %>%
tm_map(stemDocument)
jeopCorpus$`4`
jeopCorpus <- Corpus(VectorSource(rstats$clean_tweet)) %>%
tm_map(content_transformer(tolower))
rstats$clean_tweet = gsub("&amp", "", rstats$text)
rstats$clean_tweet = gsub("(RT|via)((?:\\b\\W*@\\w+)+)", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("@\\w+", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("[[:punct:]]", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("[[:digit:]]", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("http\\w+", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("[ \t]{2,}", "", rstats$clean_tweet)
rstats$clean_tweet = gsub("^\\s+|\\s+$", "", rstats$clean_tweet)
View(rstats)
jeopCorpus <- Corpus(VectorSource(rstats$clean_tweet))
jeopCorpus <- Corpus(VectorSource(rstats$clean_tweet)) %>%
tm_map(content_transformer(tolower))
jeopCorpus[[1]]$content
jeopCorpus <- Corpus(VectorSource(rstats$clean_tweet)) %>%
tm_map(content_transformer(tolower))
jeopCorpus <- Corpus(VectorSource(rstats$clean_tweet)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, stopwords('german')) %>%
tm_map(stemDocument)
jeopCorpus[[1]]$content
dtm <- TermDocumentMatrix(jeopCorpus)
rstats$clean_tweet =str_replace_all(rstats$clean_tweet,"[^[:graph:]]", " ")
jeopCorpus <- Corpus(VectorSource(rstats$clean_tweet)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, stopwords('german')) %>%
tm_map(stemDocument)
jeopCorpus[[1]]$content
dtm <- TermDocumentMatrix(jeopCorpus)
tm_map(jeopCorpus, function(x) iconv(enc2utf8(x), sub = "byte"))
dtm <- TermDocumentMatrix(jeopCorpus)
jeopCorpus <- Corpus(VectorSource(rstats$clean_tweet)) %>%
tm_map(removePunctuation) %>%
tm_map(tolower) %>%
tm_map(removeWords, stopwords('german')) %>%
tm_map(stemDocument)
jeopCorpus[[1]]$content
tm_map(jeopCorpus, function(x) iconv(enc2utf8(x), sub = "byte"))
dtm <- TermDocumentMatrix(jeopCorpus)
rstats$clean_tweet =str_replace_all(rstats$clean_tweet,"[^[:graph:]]", " ")
jeopCorpus <- Corpus(VectorSource(rstats$clean_tweet)) %>%
tm_map(removePunctuation) %>%
tm_map(tolower) %>%
tm_map(removeWords, stopwords('german')) %>%
tm_map(stemDocument)
jeopCorpus[[1]]$content
dtm <- TermDocumentMatrix(jeopCorpus)
tm_map(jeopCorpus, function(x) iconv(enc2utf8(x), sub = "byte"))
dtm <- TermDocumentMatrix(jeopCorpus)
jeopCorpus<-tm_map(jeopCorpus, function(x) iconv(enc2utf8(x), sub = "byte"))
dtm <- TermDocumentMatrix(jeopCorpus)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
wordcloud2(demoFreq, figPath = "C:/Users/Thomas/Documents/R/twitter/schweiz.jpg")
wordcloud2(demoFreq, figPath = "schweiz.jpg")
wordcloud2(demoFreq, figPath = "schweiz.jpeg")
wordcloud2(demoFreq, figPath = "schweiz.png")
wordcloud2(demoFreq, figPath = "schweiz.png")
wordcloud2(d, figPath = "schweiz.png")
wordcloud2(dtm, figPath = "schweiz.png")
wordcloud2(d, figPath = "schweiz.png")
wordcloud2(d, figPath = "schweiz.png")
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
wordcloud2(d, figPath = "schweiz.png")
wordcloud2(d, figPath = "swiss.png")
wordcloud2(d, figPath = "swiss.jpg")
wordcloud2(d, figPath = "swiss.jpg")
wordcloud2(d, figPath = "swiss.jpg")
demoFreq
d
wordcloud2(d, figPath = "swiss.jpg")
wordcloud2(d, figPath = "swiss.jpg")
wordcloud2(demoFreq, figPath = "swiss.jpg")
letterCloud(d,"#NOBILLAG")
library(wordcloud2)
library(tm)
library(wordcloud)
library(SnowballC)
library("textcat")
library("stringr")
library(tidyverse)
letterCloud(d,"#NOBILLAG")
letterCloud(d,"NOBILLAG")
View(d)
?mean
library(pacman)
p_load(tidyverse,igraph,ggraph,rtweet,hrbrthemes)
library(showtext)
## Loading Google fonts (http://www.google.com/fonts)
font_add_google("Raleway", "raleway")
showtext_auto()
rstats <-readRDS("rstatssrf1301.RDS")youtu
rstats <-readRDS("rstatssrf1301.RDS")
# glimpse(rstats)
#
# filter(rstats, retweet_count > 0) %>%
#   select(text, mentions_screen_name, retweet_count) %>%
#   mutate(text = substr(text, 1, 30)) %>%
#   unnest()
#
#
# filter(rstats, str_detect(text, "(RT|via)((?:[[:blank:]:]\\W*@\\w+)+)")) %>%
#   select(text, mentions_screen_name, retweet_count) %>%
#   mutate(extracted = str_match(text, "(RT|via)((?:[[:blank:]:]\\W*@\\w+)+)")[,3]) %>%
#   mutate(text = substr(text, 1, 30)) %>%
#   unnest()
filter(rstats, retweet_count > 5) %>%
select(screen_name, mentions_screen_name) %>%
unnest(mentions_screen_name) %>%
filter(!is.na(mentions_screen_name)) %>%
graph_from_data_frame() -> rt_g
ggplot(data_frame(y=degree_distribution(rt_g), x=1:length(y))) +
geom_segment(aes(x, y, xend=x, yend=0), color="slateblue") +
scale_y_continuous(expand=c(0,0), trans="sqrt") +
labs(x="Degree", y="Density (sqrt scale)", title="#rstats Retweet Degree Distribution")
# theme_ipsum_rc(grid="Y", axis="x")
V(rt_g)$node_label <- unname(ifelse(degree(rt_g)[V(rt_g)] > 25, names(V(rt_g)), ""))
V(rt_g)$node_size <- unname(ifelse(degree(rt_g)[V(rt_g)] > 25, degree(rt_g), 0))
# gg1 <-
ggraph(rt_g, layout = 'linear', circular = TRUE) +
geom_edge_arc(edge_width=0.0755, aes(alpha=..index..)) +
geom_node_label(aes(label=node_label, size=node_size),
label.size=0, fill="#ffffff66", segment.colour="springgreen",
color="slateblue", repel=TRUE, fontface="bold") +
coord_fixed() +
scale_size_area(trans="sqrt") +
labs(title="Retweet Relationships", subtitle="Namen mit den meisten Retweets gelabelt.\nDarkers edges == more retweets. Node size == larger degree") +
theme_graph(base_family="raleway") +
theme(legend.position="none")
# gg1
ggsave("graph.png", units="cm",width = 20, height = 20)
#
install.packages("keras")
# Load in the keras package
library(keras)
# Install TensorFlow
install_tensorflow()
# Load in the keras package
library(keras)
# Install TensorFlow
install_tensorflow()
# Klassifizierung der User nach Pro / Kontra funktioniert für die Top-Twitterer relativ gut
userkontra <-tweetpredictall %>% group_by(user,predcat) %>% summarize(anteil=n()/sum(n())) %>% arrange(desc(anteil))
library(rtweet)
library(rtweet)
nobillag <- search_tweets("#nobillag", n=5000)
neinzunobillag <- search_tweets("#neinzunobillag", n=5000)
nonobillag <- search_tweets("#nonobillag", n=5000)
nobillag_date <-bind_rowds(nobillag,neinzunobillag,nonobillag) %>% distinct(status_id,keep_all=T)
saveRDS(nobillag_date,"nobillag_11022018.RDS")
blogdown::new_site(theme="digitalcraftsman/hugo-minimalist-theme")
blogdown::new_site(theme="digitalcraftsman/hugo-minimalist-theme")
shiny::runApp('abstweets/example')
runApp('abstweets')
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild")
setwd("~/abstweets")
library(tidyverse)
library(lubridate)
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild")
setwd("~/abstweets")
library(tidyverse)
library(lubridate)
vg_gsg <- readRDS("vg_gsg.rds")
# %>% tidyr::spread(vorlage,anzahl)
data_rt <- readRDS("retweets.rds")
activity <- readRDS("activity.rds")
vg_gsg <-vg_gsg %>% mutate(countdown=as.Date("2018-06-10")-dmy) %>% filter(!is.na(dmy))
library(echarts4r)
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild")
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild speichern")
USArrests %>%
e_charts(UrbanPop) %>%
e_line(Assault) %>%
e_area(Murder, y.index = 1, x.index = 1) %>%
e_toolbox(feature = "saveAsImage", title = "Save As Image")
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild speichern",right="20%")
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild speichern",right="20")
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild speichern",textPosition="top")
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild speichern")
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild speichern",iconStyle=list(textPosition="top"))
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild speichern",iconStyle=list(left="50%"))
USArrests %>%
e_charts(UrbanPop) %>%
e_line(Assault) %>%
e_area(Murder, y.index = 1, x.index = 1) %>%
e_toolbox(feature = "saveAsImage", title = "Save As Image")
#mit echarts version 4
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild speichern", iconStyle=list(textPosition='top'))
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild speichern", textPosition='top')
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild speichern", textPosition='top') %>%
e_toolbox(feature = "dataView)
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild speichern", textPosition='top') %>%
e_toolbox(feature = "dataView")
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild speichern", textPosition='top') %>%
e_toolbox(feature = "dataView")
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild speichern", textPosition='top') %>%
e_toolbox(feature = "dataView",title="Daten")
USArrests %>%
e_charts(UrbanPop) %>%
e_line(Assault) %>%
e_area(Murder, y.index = 1, x.index = 1) %>%
e_toolbox(feature = "saveAsImage", title = "Save As Image") %>%
e_toolbox(feature = "dataView",title="Data")
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild speichern", textPosition='top') %>%
e_toolbox(feature = "dataView",title="Daten")
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild speichern", textPosition='top') %>%
e_toolbox(feature = "dataView",title="Daten",name="hello")
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild speichern", textPosition='top') %>%
e_toolbox(feature = "dataView",titlle="Data", lang="turn off")
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild speichern", textPosition='top') %>%
e_toolbox(feature = "dataView",title="Data", lang="")
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild speichern", textPosition='top') %>%
e_toolbox(feature = "dataView",title="Data")
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild speichern", textPosition='top') %>%
e_toolbox(feature = "dataView",title="Data", lang="")
USArrests %>%
e_charts(UrbanPop) %>%
e_line(Assault) %>%
e_area(Murder, y.index = 1, x.index = 1) %>%
e_toolbox(feature = "saveAsImage", title = "Save As Image") %>%
e_toolbox(feature = "dataView",title="Data",lang="")
USArrests %>%
e_charts(UrbanPop) %>%
e_line(Assault) %>%
e_area(Murder, y.index = 1, x.index = 1) %>%
e_toolbox(feature = "saveAsImage", title = "Save As Image") %>%
e_toolbox(feature = "dataView",title="Data",lang="")
USArrests %>%
e_charts(UrbanPop) %>%
e_line(Assault) %>%
e_area(Murder, y.index = 1, x.index = 1) %>%
e_toolbox(feature = "saveAsImage", title = "Save As Image")
USArrests %>%
e_charts(UrbanPop) %>%
e_line(Assault) %>%
e_area(Murder, y.index = 1, x.index = 1) %>%
e_toolbox(feature = "saveAsImage", title = "Save As Image",left='100') %>%
e_toolbox(feature = "dataView",title="Data",lang="")
USArrests %>%
e_charts(UrbanPop) %>%
e_line(Assault) %>%
e_area(Murder, y.index = 1, x.index = 1) %>%
e_toolbox(feature = "saveAsImage", title = "Save As Image",left='center') %>%
e_toolbox(feature = "dataView",title="Data",lang="")
USArrests %>%
e_charts(UrbanPop) %>%
e_line(Assault) %>%
e_area(Murder, y.index = 1, x.index = 1) %>%
e_toolbox(feature = "saveAsImage", title = "Save As Image",right='20') %>%
e_toolbox(feature = "dataView",title="Data",lang="")
USArrests %>%
e_charts(UrbanPop) %>%
e_line(Assault) %>%
e_area(Murder, y.index = 1, x.index = 1) %>%
e_toolbox(feature = "saveAsImage", title = "Save As Image",right='20%') %>%
e_toolbox(feature = "dataView",title="Data",lang="")
USArrests %>%
e_charts(UrbanPop) %>%
e_line(Assault) %>%
e_area(Murder, y.index = 1, x.index = 1) %>%
e_toolbox(feature = "saveAsImage", title = "Save As Image",right=20,width=) %>%
e_toolbox(feature = "dataView",title="Data",lang="")
USArrests %>%
e_charts(UrbanPop) %>%
e_line(Assault) %>%
e_area(Murder, y.index = 1, x.index = 1) %>%
e_toolbox(feature = "saveAsImage", title = "Save As Image",right=20) %>%
e_toolbox(feature = "dataView",title="Data",lang="")
USArrests %>%
e_charts(UrbanPop) %>%
e_line(Assault) %>%
e_area(Murder, y.index = 1, x.index = 1) %>%
e_toolbox(feature = "saveAsImage", title = "Save As Image",right='20%',width="200") %>%
e_toolbox(feature = "dataView",title="Data",lang="")
vg_gsg %>%
e_charts(dmy) %>%
e_line(vg,name="Vollgeld") %>%
e_line(gsg,name="Geldspielgesetz") %>%
e_tooltip(trigger = "axis") %>%
e_toolbox(feature = "saveAsImage",title="Bild speichern", textPosition='top') %>%
e_toolbox(feature = "dataView",title="Data", lang="")
shiny::runApp()
runApp()
runApp()
